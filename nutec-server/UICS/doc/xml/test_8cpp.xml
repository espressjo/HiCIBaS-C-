<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="test_8cpp" kind="file" language="C++">
    <compoundname>test.cpp</compoundname>
    <includes refid="test_8h" local="yes">test.h</includes>
    <incdepgraph>
      <node id="18">
        <label>inst_log.h</label>
        <link refid="inst__log_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="23">
        <label>netinet/in.h</label>
      </node>
      <node id="27">
        <label>arpa/inet.h</label>
      </node>
      <node id="8">
        <label>states.h</label>
        <link refid="states_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>stdlib.h</label>
      </node>
      <node id="17">
        <label>cstdarg</label>
      </node>
      <node id="11">
        <label>string</label>
      </node>
      <node id="15">
        <label>fstream</label>
      </node>
      <node id="25">
        <label>netdb.h</label>
      </node>
      <node id="21">
        <label>uics_sockets.h</label>
        <link refid="uics__sockets_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>insthandle.h</label>
        <link refid="insthandle_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>inst_time.h</label>
        <link refid="inst__time_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>sys/types.h</label>
      </node>
      <node id="30">
        <label>uics_sndmsg.h</label>
        <link refid="uics__sndmsg_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>uics_cmds.h</label>
        <link refid="uics__cmds_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>ctime</label>
      </node>
      <node id="26">
        <label>unistd.h</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
      <node id="2">
        <label>test.h</label>
        <link refid="test_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>sstream</label>
      </node>
      <node id="14">
        <label>cstdlib</label>
      </node>
      <node id="1">
        <label>/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/example/test.cpp</label>
        <link refid="test_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>cctype</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="29">
        <label>ctype.h</label>
      </node>
      <node id="28">
        <label>uics_ports.h</label>
        <link refid="uics__ports_8h_source"/>
      </node>
      <node id="5">
        <label>sys/socket.h</label>
      </node>
      <node id="13">
        <label>algorithm</label>
      </node>
      <node id="22">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="test_8cpp_1a250428e067f0fb2468437ecc3a92ac79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void megaTest</definition>
        <argsstring>(instHandle *handle, cmd *cc)</argsstring>
        <name>megaTest</name>
        <param>
          <type><ref refid="structinstHandle" kindref="compound">instHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcmd" kindref="compound">cmd</ref> *</type>
          <declname>cc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/example/test.cpp" line="2" column="6" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/example/test.cpp" bodystart="2" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="test_8cpp_1aec0b9130e3e0986d935a6e98827d5b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void test</definition>
        <argsstring>(std::string s)</argsstring>
        <name>test</name>
        <param>
          <type>std::string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/example/test.cpp" line="14" column="6" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/example/test.cpp" bodystart="14" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="test_8cpp_1adbc37ea195158c83427495285347e280" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void megaTest2</definition>
        <argsstring>(instHandle *handle, cmd *cc)</argsstring>
        <name>megaTest2</name>
        <param>
          <type><ref refid="structinstHandle" kindref="compound">instHandle</ref> *</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="classcmd" kindref="compound">cmd</ref> *</type>
          <declname>cc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/example/test.cpp" line="19" column="6" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/example/test.cpp" bodystart="19" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;test.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>megaTest(<ref refid="structinstHandle" kindref="compound">instHandle</ref><sp/>*handle,<ref refid="classcmd" kindref="compound">cmd</ref><sp/>*cc)</highlight></codeline>
<codeline lineno="3"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>var<sp/>=<sp/>0;<sp/>var<sp/>&lt;<sp/>cc-&gt;nbArg;<sp/>++var)<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;arg&quot;</highlight><highlight class="normal">&lt;&lt;var+1&lt;&lt;</highlight><highlight class="stringliteral">&quot;:<sp/>&quot;</highlight><highlight class="normal">&lt;&lt;cc-&gt;argsVal[var]&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal">sndMsg(cc-&gt;sockfd);</highlight></codeline>
<codeline lineno="10"><highlight class="normal">return<sp/>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>test(std::string<sp/>s)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout&lt;&lt;s&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>;</highlight></codeline>
<codeline lineno="18"><highlight class="normal">}</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>megaTest2(<ref refid="structinstHandle" kindref="compound">instHandle</ref><sp/>*handle,<ref refid="classcmd" kindref="compound">cmd</ref><sp/>*cc)</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//(*cc).printCMD();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>cc-&gt;printCMD();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>p=</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(*cc)[</highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.compare(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)!=0)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//test(&quot;read:<sp/>&quot;+p);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;(*cc)[</highlight><highlight class="stringliteral">&quot;read&quot;</highlight><highlight class="normal">]&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(*cc)[</highlight><highlight class="stringliteral">&quot;ramp&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.compare(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)!=0)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;static_cast&lt;uint&gt;(std::atoi((*cc)[</highlight><highlight class="stringliteral">&quot;ramp&quot;</highlight><highlight class="normal">].c_str()))&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(*cc)[</highlight><highlight class="stringliteral">&quot;reset&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(p.compare(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)!=0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;static_cast&lt;uint&gt;(std::atoi((*cc)[</highlight><highlight class="stringliteral">&quot;reset&quot;</highlight><highlight class="normal">].c_str()))&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">sndMsg(cc-&gt;sockfd);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">return<sp/>;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/example/test.cpp"/>
  </compounddef>
</doxygen>
