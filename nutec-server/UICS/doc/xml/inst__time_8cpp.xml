<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="inst__time_8cpp" kind="file" language="C++">
    <compoundname>inst_time.cpp</compoundname>
    <includes local="no">string</includes>
    <includes local="no">string.h</includes>
    <includes local="no">ctime</includes>
    <includes refid="inst__time_8h" local="yes">inst_time.h</includes>
    <includes local="no">sys/time.h</includes>
    <incdepgraph>
      <node id="2">
        <label>string</label>
      </node>
      <node id="1">
        <label>/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp</label>
        <link refid="inst__time_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>inst_time.h</label>
        <link refid="inst__time_8h_source"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>ctime</label>
      </node>
      <node id="6">
        <label>sys/time.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="inst__time_8cpp_1abed30564cdea271f7de786d28be912cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ts_now_gmt</definition>
        <argsstring>()</argsstring>
        <name>ts_now_gmt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="8" column="13" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="8" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_1ab924c9938c394fe46494a65acc460651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>long</type>
        <definition>long gregorian_calendar_to_jd</definition>
        <argsstring>(int y, int m, int d)</argsstring>
        <name>gregorian_calendar_to_jd</name>
        <param>
          <type>int</type>
          <declname>y</declname>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
        </param>
        <param>
          <type>int</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="26" column="6" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_1aeb4e1a75c3165a0489552eb66b2d95fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ts_now_jd</definition>
        <argsstring>()</argsstring>
        <name>ts_now_jd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="35" column="13" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="35" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_1a533884505bcaaf9a9759b6b71dbb2a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ts_now_jdd</definition>
        <argsstring>()</argsstring>
        <name>ts_now_jdd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="55" column="8" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="55" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_1af22b0b19976a233e08bf0530a76c244e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ts_now_mjdd</definition>
        <argsstring>()</argsstring>
        <name>ts_now_mjdd</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="73" column="8" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="73" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_1a058e8a01db6743966e38718c6eb48b21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string ts_now_local</definition>
        <argsstring>()</argsstring>
        <name>ts_now_local</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="93" column="13" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="93" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_a0dc81b066fa16eef629d1c70d5f72052_1a0dc81b066fa16eef629d1c70d5f72052" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double jd_time_now</definition>
        <argsstring>()</argsstring>
        <name>jd_time_now</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Based on sys/time.h return jd in double </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="106" column="8" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="106" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_ab32bd5d59094f93e6804efec70fec498_1ab32bd5d59094f93e6804efec70fec498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double mjd_time_now</definition>
        <argsstring>()</argsstring>
        <name>mjd_time_now</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Based on sys/time.h A modified version of the Julian date denoted MJD obtained by subtracting 2,400,000.5 days from the Julian date JD. Return a double </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="121" column="8" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="121" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_ae402b6ce4d839fb79bbe4439208f7b75_1ae402b6ce4d839fb79bbe4439208f7b75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string mjd2str</definition>
        <argsstring>(double mjd)</argsstring>
        <name>mjd2str</name>
        <param>
          <type>double</type>
          <declname>mjd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Based on sys/time.h Convert a MJD double in std::string in the format of yyy-mm-ddThh:mm:ss </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="138" column="13" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="138" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="inst__time_8cpp_a57e092abb70904b4a7eb451aeb62d713_1a57e092abb70904b4a7eb451aeb62d713" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string jd2str</definition>
        <argsstring>(double mjd)</argsstring>
        <name>jd2str</name>
        <param>
          <type>double</type>
          <declname>mjd</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Based on sys/time.h Convert a JD double in std::string in the format of yyy-mm-ddThh:mm:ss </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" line="161" column="13" bodyfile="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp" bodystart="161" bodyend="183"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;inst_time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">std::string<sp/>ts_now_gmt()</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Return<sp/>a<sp/>string<sp/>in<sp/>with<sp/>now<sp/>time<sp/>YYYY-MM-DDTHH:MM:SS<sp/>in<sp/>gmt</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/>time_t<sp/>rawtime;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<sp/>ptm;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>time<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>ptm<sp/>=<sp/>gmtime<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tt[20];</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/>memset(tt,0,20);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/>sprintf(tt,</highlight><highlight class="stringliteral">&quot;%2.2d-%2.2d-%2.2dT%2.2d:%2.2d:%2.2d\n&quot;</highlight><highlight class="normal">,ptm-&gt;tm_year+1900,ptm-&gt;tm_mon+1,ptm-&gt;tm_mday,ptm-&gt;tm_hour,ptm-&gt;tm_min,ptm-&gt;tm_sec);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(tt);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>gregorian_calendar_to_jd(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>d)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>y+=8000;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m&lt;3)<sp/>{<sp/>y--;<sp/>m+=12;<sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(y*365)<sp/>+(y/4)<sp/>-(y/100)<sp/>+(y/400)<sp/>-1200820</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+(m*153+3)/5-92</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+d-1</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal">std::string<sp/>ts_now_jd()</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Return<sp/>a<sp/>string<sp/>in<sp/>with<sp/>now<sp/>time<sp/>in<sp/>GMT<sp/>JD</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>time_t<sp/>rawtime;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<sp/>ptm;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>time<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>ptm<sp/>=<sp/>gmtime<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>ptm-&gt;tm_mon+1,y<sp/>=<sp/>ptm-&gt;tm_year+1900,d<sp/>=ptm-&gt;tm_mday;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jd1<sp/>=<sp/>gregorian_calendar_to_jd(y,m,d);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>jd2<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_min)/60.0<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_hour)<sp/><sp/>+</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_sec)/3600.0<sp/>)/24.0<sp/>-0.5;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tt[50];</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>memset(tt,0,50);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>sprintf(tt,</highlight><highlight class="stringliteral">&quot;%f\n&quot;</highlight><highlight class="normal">,jd1+jd2);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(tt);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ts_now_jdd()</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>Return<sp/>a<sp/>string<sp/>in<sp/>with<sp/>now<sp/>time<sp/>in<sp/>GMT<sp/>JD<sp/>in<sp/>double</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>time_t<sp/>rawtime;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<sp/>ptm;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>time<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/>ptm<sp/>=<sp/>gmtime<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>ptm-&gt;tm_mon+1,y<sp/>=<sp/>ptm-&gt;tm_year+1900,d<sp/>=ptm-&gt;tm_mday;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jd1<sp/>=<sp/>gregorian_calendar_to_jd(y,m,d);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>jd2<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_min)/60.0<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_hour)<sp/><sp/>+</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_sec)/3600.0<sp/>)/24.0<sp/>-0.5;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jd1+jd2;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ts_now_mjdd()</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/>A<sp/>modified<sp/>version<sp/>of<sp/>the<sp/>Julian<sp/>date<sp/>denoted<sp/>MJD<sp/>obtained</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/>by<sp/>subtracting<sp/>2,400,000.5<sp/>days<sp/>from<sp/>the<sp/>Julian<sp/>date<sp/>JD.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>Return<sp/>a<sp/>double.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>time_t<sp/>rawtime;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<sp/>ptm;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>time<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>ptm<sp/>=<sp/>gmtime<sp/>(<sp/>&amp;rawtime<sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m<sp/>=<sp/>ptm-&gt;tm_mon+1,y<sp/>=<sp/>ptm-&gt;tm_year+1900,d<sp/>=ptm-&gt;tm_mday;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jd1<sp/>=<sp/>gregorian_calendar_to_jd(y,m,d);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>jd2<sp/>=<sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_min)/60.0<sp/>+<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_hour)<sp/><sp/>+</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(ptm-&gt;tm_sec)/3600.0<sp/>)/24.0<sp/>-0.5;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(jd1+jd2)-2400000.5;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">std::string<sp/>ts_now_local()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>Return<sp/>a<sp/>string<sp/>in<sp/>with<sp/>now<sp/>time<sp/>YYYY-MM-DDTHH:MM:SS<sp/>in<sp/>gmt</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>t<sp/>=<sp/>time(</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*<sp/>ptm<sp/>=<sp/>localtime(&amp;t);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tt[20];</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>memset(tt,0,20);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>sprintf(tt,</highlight><highlight class="stringliteral">&quot;%2.2d-%2.2d-%2.2dT%2.2d:%2.2d:%2.2d\n&quot;</highlight><highlight class="normal">,ptm-&gt;tm_year+1900,ptm-&gt;tm_mon+1,ptm-&gt;tm_mday,ptm-&gt;tm_hour,ptm-&gt;tm_min,ptm-&gt;tm_sec);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(tt);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jd_time_now()</highlight></codeline>
<codeline lineno="111"><highlight class="normal">{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gettimeofday(&amp;tv,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)!=0)</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>jd;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>jd<sp/>=<sp/>2440587.5<sp/>+<sp/>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tv.tv_sec)<sp/>+(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tv.tv_usec)/1000000.0))/86400.0);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jd;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mjd_time_now()</highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gettimeofday(&amp;tv,</highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">)!=0)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mjd;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>mjd<sp/>=<sp/>2440587.5<sp/>+<sp/>((</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tv.tv_sec)<sp/>+(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">double</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tv.tv_usec)/1000000.0))/86400.0);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>mjd-2400000.5;</highlight></codeline>
<codeline lineno="137"><highlight class="normal">}</highlight></codeline>
<codeline lineno="138"><highlight class="normal">std::string<sp/>mjd2str(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mjd)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>mjd+=(2400000.5-2440587.5);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>mjd*=86400.0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>tv.tv_sec<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mjd);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>usec<sp/>=<sp/>(mjd-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mjd))*1000000.0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>tv.tv_usec=</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(usec);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*tm;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>tt<sp/>=<sp/>tv.tv_sec;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>gmtime(&amp;tt);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>txttime[20];</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(txttime,0,20);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(txttime,</highlight><highlight class="stringliteral">&quot;%2.2d-%2.2d-%2.2dT%2.2d:%2.2d:%2.2d\n&quot;</highlight><highlight class="normal">,tm-&gt;tm_year+1900,tm-&gt;tm_mon+1,tm-&gt;tm_mday,tm-&gt;tm_hour,tm-&gt;tm_min,tm-&gt;tm_sec);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(txttime);</highlight></codeline>
<codeline lineno="160"><highlight class="normal">}</highlight></codeline>
<codeline lineno="161"><highlight class="normal">std::string<sp/>jd2str(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>mjd)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>mjd-=(2440587.5);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>mjd*=86400.0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>tv.tv_sec<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mjd);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>usec<sp/>=<sp/>(mjd-</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(mjd))*1000000.0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>tv.tv_usec=</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">long</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(usec);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm<sp/>*tm;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>tt<sp/>=<sp/>tv.tv_sec;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>tm<sp/>=<sp/>gmtime(&amp;tt);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>txttime[20];</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(txttime,0,20);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(txttime,</highlight><highlight class="stringliteral">&quot;%2.2d-%2.2d-%2.2dT%2.2d:%2.2d:%2.2d\n&quot;</highlight><highlight class="normal">,tm-&gt;tm_year+1900,tm-&gt;tm_mon+1,tm-&gt;tm_mday,tm-&gt;tm_hour,tm-&gt;tm_min,tm-&gt;tm_sec);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(txttime);</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/noboru/Documents/UdeM/HxRG-SERVER2/UICS/src/inst_time.cpp"/>
  </compounddef>
</doxygen>
